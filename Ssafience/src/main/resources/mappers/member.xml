<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.ssafience.repo.MemberRepo">
	
	<select id="selectMemberOne" resultType="member">
		SELECT * 
		FROM member
	    where member_id = #{memberId}
   	</select>
	
	<select id="selectMemberDetail" resultType="memberresult">
	SELECT member_no, member_email, member_id, member_pw, member_first_name, member_last_name, member_phone, cr.category_name member_region, ct.category_name member_track, cu.category_name member_unit, member_intro, member_desc, member_article, member_follow, member_follower, member_interested, member_skill, member_auth, member_auth_status, member_auth_datetime, member_address, member_datetime, 
    	member_no, member_id, member_pw, member_email, member_first_name, member_last_name, member_phone, cr.category_name, ct.category_name, cu.category_name, member_intro, member_desc, member_article, member_follow, member_follower, member_interested, member_skill, member_auth, member_auth_status, member_auth_datetime, member_address, member_datetime
	FROM member
	    LEFT OUTER JOIN category cr ON member_region = cr.category_no
	    LEFT OUTER JOIN category ct ON member_track = ct.category_no
	    LEFT OUTER JOIN category cu ON member_unit = cu.category_no
	where member_id = #{memberId}

   	</select>
	
	<select id="selectMemberOneByMemberEmail" resultType="member">
		select *
		from member
		where member_email = #{memberEmail}
	</select>
	
	<insert id="insert">
		insert into member (member_id, member_pw, member_email)
		values ( #{memberId}, #{memberPw}, #{memberEmail})
	</insert>
	
	<update id="update">
		update member
		set member_id = #{memberId}, member_first_name = #{memberFirstName}, 
			member_last_name = #{memberLastName}, member_phone = #{memberPhone}, 
			member_address = #{memberAddress}, member_region = #{memberRegion},
			member_class = #{memberClass}, member_track = #{memberTrack},
			member_unit = #{memberUnit}, member_intro = #{memberIntro},
			member_desc = #{memberDesc}, member_interested = #{memberInterested},
			member_skill = #{memberSkill}			
		where member_id = #{memberId}
	</update>
	
	<delete id="delete">
		delete from member
		where member_id = #{memberId}
	</delete>
	
	<!-- 인증키 저장 -->
	<update id="setMemberAuth">
		update member
		set member_auth = #{memberAuth}	
		where member_Email = #{memberEmail}
	</update>

	<!-- 인증 성공 후, 상태 저장 -->
	<update id="setAuthStatus">
		update member
		set member_auth_status = #{status}	
		where member_Email = #{memberEmail}
	</update>

</mapper>

